name: Build Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build web app
      run: npm run build

    - name: Sync Capacitor
      run: npx cap sync android

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Setup Release Keystore
      run: |
        cd android/app
        # Use keystore from secrets if available, otherwise generate new one
        if [ -n "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" ]; then
          echo "Using keystore from secrets..."
          echo "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" | base64 -d > chi-pins-release.keystore
        else
          echo "Generating new keystore (will cause signature mismatch on updates)..."
          keytool -genkeypair -v \
            -keystore chi-pins-release.keystore \
            -alias chi-pins \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000 \
            -storepass chipins2024 \
            -keypass chipins2024 \
            -dname "CN=Chi Pins, OU=Development, O=Chicago Mikes, L=Chicago, ST=IL, C=US"
        fi

    - name: Build Release APK
      run: |
        cd android
        chmod +x gradlew
        ./gradlew assembleRelease --no-daemon
      env:
        KEYSTORE_PATH: chi-pins-release.keystore
        KEYSTORE_PASSWORD: chipins2024
        KEY_ALIAS: chi-pins
        KEY_PASSWORD: chipins2024

    - name: Get timestamp
      id: timestamp
      run: echo "timestamp=$(date +%Y%m%d_%H%M%S)" >> $GITHUB_OUTPUT

    - name: Rename APK
      run: cp android/app/build/outputs/apk/release/app-release.apk android/app/build/outputs/apk/release/chi-pins-${{ steps.timestamp.outputs.timestamp }}.apk

    - name: Upload APK as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: chi-pins-apk
        path: android/app/build/outputs/apk/release/chi-pins-${{ steps.timestamp.outputs.timestamp }}.apk
        retention-days: 30

    - name: Output keystore info
      run: |
        if [ -z "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" ]; then
          echo "::warning::No keystore in secrets - generated new one this build"
          echo "::warning::To enable consistent signing, add keystore to secrets:"
          echo "::warning::base64 -i android/app/chi-pins-release.keystore | gh secret set RELEASE_KEYSTORE_BASE64"
        else
          echo "Using persistent keystore from secrets"
        fi

    - name: Upload APK to Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: latest
        files: android/app/build/outputs/apk/release/chi-pins-${{ steps.timestamp.outputs.timestamp }}.apk
        name: "Chi-Pins Latest Build"
        body: |
          Automated build from commit ${{ github.sha }}
          Build timestamp: ${{ steps.timestamp.outputs.timestamp }}

          Download and install on your Android device.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Report build failure to autonomous healer
      if: failure()
      env:
        SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
      run: |
        # Create error record in Supabase for autonomous healer to pick up
        curl -X POST "$SUPABASE_URL/rest/v1/error_log" \
          -H "apikey: $SUPABASE_KEY" \
          -H "Authorization: Bearer $SUPABASE_KEY" \
          -H "Content-Type: application/json" \
          -H "Prefer: return=minimal" \
          -d "{
            \"message\": \"GitHub Actions: Android APK build workflow failed\",
            \"severity\": \"ERROR\",
            \"source\": \"github-actions-build-apk\",
            \"stack\": \"Workflow run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\",
            \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",
            \"metadata\": {
              \"workflow\": \"build-apk\",
              \"run_id\": \"${{ github.run_id }}\",
              \"commit\": \"${{ github.sha }}\",
              \"branch\": \"${{ github.ref_name }}\"
            }
          }" || echo "Failed to report to autonomous healer (non-critical)"
